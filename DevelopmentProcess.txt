Project implementation
======================
The project's requirements are fulfiled (two displays, one in a table and

Code structure:
===============

The code is based on angularJs (v1.4) and includes one service where the data is received,
one directive for the chart, and two filters which I coudn't find similar ones on angularJs core module.


 The chart directive wraps the hiChart code.

   External Libraries:
   1. angularJs
   2. hiChart
   3. jQuery (hiChart dependency)
   4. bootstrap (for css reasons)
   5. momentJs for string to date casting

   Running instructions:
   =====================

   The code contains only .json, HTML, CSS and javaScript code. So you can put it on any server
   and just run it. The code reference a .json file as its server data source and therefore
   if you're running this code on a microsoft based server, make sure it supports the mime type.




Chart data development process
===============================

The task itself involved mainly data manipulation and aggregation.
Most of the development and the code written is on that task.

The task took around 4 hours (accumulated) and involved on my part, learning to work with hiChart library
to show the graph, and some javaascript for aggregation

Most of the issues and bugs I've encountered along the way was on the aggregation calculation.
Some code I've put on the controller part I have moved it to the directve part because it agreggates
the data on the graph.


Things to do, if more time is provided
======================================

1. UI Improvement, responsiveness
2. Unit testing
3. Performance improvements (mainly by paging the data and use hiChart zoom capabilities)
4. I use filtering on server side instead of client side, This is not time consuming for me
   as developer, I just wanted to make the project easy to run.
5. Code quality, there's always room for improvement.






